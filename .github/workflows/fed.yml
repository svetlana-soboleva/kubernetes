name: Build and Deploy Frontend to Kubernetes

on:
  push:
    branches:
      - main  

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
     
      - name: Checkout repository
        uses: actions/checkout@v2
        
      # Step 1: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Step 2: Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build and push the Docker image
      - name: Build and push Docker image
        run: |
          cd frontend
          docker build -t ssobol/notes-frontend:latest .
          docker push ssobol/notes-frontend:latest

      # Step 4: Install the GKE GCloud Auth Plugin
      - name: Install Google Cloud SDK and GKE Auth Plugin
        run: |
          curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee /etc/apt/sources.list.d/google-cloud-sdk.list
          sudo apt-get update
          sudo apt-get install -y google-cloud-sdk google-cloud-sdk-gke-gcloud-auth-plugin
          export USE_GKE_GCLOUD_AUTH_PLUGIN=True
          echo "export USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> $HOME/.bashrc

      - name: Validate GKE GCloud Auth Plugin Installation
        run: |
          which gke-gcloud-auth-plugin || echo "Plugin not found"
          gke-gcloud-auth-plugin --version || echo "Unable to verify version"

      # Step 5: Authenticate to Google Cloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      # Step 6: Configure kubectl for GKE
      - name: Set up kubectl
        run: |
          gcloud container clusters get-credentials autopilot-cluster-1 --zone europe-north1 --project regal-marking-409018

      # Step 7: Apply Kubernetes Deployment and Service YAML files
      - name: Apply Kubernetes Deployment and Service
        run: |
          kubectl apply -f frontend/deployment.yaml
          kubectl apply -f frontend/service.yaml

      # Step 8: Deploy the new image
      - name: Update Deployment with new image
        run: |
          kubectl set image deployment/notes-frontend-deployment notes-frontend=ssobol/notes-frontend:latest
          kubectl rollout status deployment/notes-frontend-deployment

      # Step 9: Force rollout restart (to ensure fresh pods)
      - name: Restart Deployment to Ensure Latest Image
        run: |
          kubectl rollout restart deployment/notes-frontend-deployment
          kubectl rollout status deployment/notes-frontend-deployment
